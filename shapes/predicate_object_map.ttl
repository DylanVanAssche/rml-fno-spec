###############################################################################
# RML Predicate Object Map shape                                              #
# Copyright Dylan Van Assche, IDLab - UGent - imec (2020 - 2023)              #
###############################################################################
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix schema: <http://schema.org/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rml: <http://w3id.org/rml/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> . 

schema:RMLPredicateObjectMapShape
    a sh:NodeShape ;
    sh:targetClass rml:PredicateObjectMap ;
    sh:targetObjectsOf rml:predicateObjectMap ;
    sh:name "PredicateObjectMap" ;
    sh:description """
    Represents a Predicate Object Map.
    """;

    sh:and (
        # Inherited shapes
        schema:RMLGraphMapPropertiesShape
        schema:RMLLogicalTargetPropertiesShape
        # Predicate Map specific shapes
        [
            sh:targetSubjectsOf rml:predicate ;
            sh:targetSubjectsOf rml:predicateMap ;
            sh:path [sh:alternativePath (rml:predicate rml:predicateMap)] ;
            sh:name "predicate/predicateMap" ;
            sh:description """
            Either an rml:predicate or rml:predicateMap must be provided, not both.
            """ ;
            sh:message """
            Either an rml:predicate or rml:predicateMap must be provided, not both.
            """ ;
            sh:minCount 1 ;
        ]
        [
            sh:targetSubjectsOf rml:predicateMap ;
            sh:path rml:predicateMap ;
            sh:name "predicateMap" ;
            sh:description """
            A PredicateMap element to generate the predicate component of the 
            (predicate, object) pair from a logical table row or iterator.
            """ ;
            sh:message """
            rml:predicateMap must be an IRI or blank node and be provided once.
            """ ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:node schema:RMLPredicateMapShape ;
        ]
        [
            sh:targetSubjectsOf rml:predicate ;
            sh:path rml:predicate ;
            sh:name "predicate" ;
            sh:description """
            Specifies the predicate for the generated triple from the logical table 
            row or iterator.
            """ ;
            sh:message """
            rml:predicate must be an IRI and be provided once.
            """ ;
            sh:nodeKind sh:IRI ;
            sh:node schema:RMLpredicateShape ;
        ]
        [
            sh:targetSubjectsOf rml:object ;
            sh:targetSubjectsOf rml:objectMap ;
            sh:path [sh:alternativePath (rml:object rml:objectMap)] ;
            sh:name "object/objectMap" ;
            sh:description """
            Either an rml:object or rml:objectMap must be provided, not both.
            """ ;
            sh:message """
            Either an rml:object or rml:objectMap must be provided, not both.
            """ ;
            sh:minCount 1 ;
            sh:maxCount 1 ;
        ]
        [
            sh:targetSubjectsOf rml:objectMap ;
            sh:path rml:objectMap ;
            sh:name "objectMap" ;
            sh:description """
            An ObjectMap element to generate the object component of the 
            (predicate, object) pair from a logical table row or iterator.
            """ ;
            sh:message """
            rml:objectMap must be an IRI or blank node and be provided once.
            """ ;
            sh:nodeKind sh:BlankNodeOrIRI ;
            sh:or ([sh:node schema:RMLObjectMapShape] 
                   [sh:node schema:RMLRefObjectMapShape]
                   [sh:node schema:RMLStarMapShape]) ;
        ]
        [
            sh:targetSubjectsOf rml:object ;
            sh:path rml:object ;
            sh:name "object" ;
            sh:description """
            Specifies the object for the generated triple from the logical table 
            row or iterator.
            """ ;
            sh:message """
            rml:object must be an IRI and be provided once.
            """ ;
            sh:nodeKind sh:IRI ;
            sh:node schema:RMLobjectShape ;
        ]
    ) ;
.
